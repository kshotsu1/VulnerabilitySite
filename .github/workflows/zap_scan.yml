name: OWASP Zap Scan

on: [push]

# on:
#   push:
#     branches: [master]
#   pull_request:
#     branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        # run: |
        #   python -m venv venv
        #   . venv/bin/activate
        #   pip install -r vulnerability_codes/src/requirements.txt

      - name: Print debugging information
        run: |
          echo "Python version: $(python --version)"
          echo "Working Directory: $(pwd)"
          echo "Contents of Working Directory: $(ls -l)"

      - name: Start the Flask application
        run: |
          nohup python ./vulnerability_codes/src/app.py &
          echo $! > flask_pid.txt
          sleep 10

      - name: Login to Flask application
        run: |
          curl -X POST -d user_id=sato2 -d password=st_pass  http://127.0.0.1:5000/login

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.11.0
        timeout-minutes: 40
        with:
          # token: ${{ secrets.MY_PATH }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://127.0.0.1:5000'
          # rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
          issue_title: '[TEST]ZAP Scan Report'
          artifact_name: '[TEST]zap-report'

      - name: Stop the Flask application
        run: |
          kill $(cat flask_pid.txt)

      # - name: Upload ZAP Report
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: zap-report
      #     path: test.txt

      # - name: Download ZAP Report
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: zap-report

      # - name: Read Artifact
      #   run: |
      #     echo "$ ls"
      #     ls
      #     echo "$ cat test.txt"
      #     cat test.txt